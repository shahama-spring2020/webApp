# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
# hjgdshgdhjhg
version: 2
jobs:
  pr_check:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1
      - image: circleci/postgres:9.4

    working_directory: ~/repo


    steps:
      - checkout

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - run:
          name: run views
          command: |
            . venv/bin/activate
            python3 views.py
          background: true


      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python3 -m unittest test_app.py





  #
  # build:
  #   docker:
  #     # specify the version you desire here
  #     # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
  #     - image: circleci/python:3.6.1
  #
  #
  #   steps:
  #     - checkout
  #
  #     - run:
  #         name: helloworld
  #         command: |
  #           echo "hello world"
  build:
      docker:
        # specify the version you desire here
        # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
        - image: circleci/python:3.6.1
        - image: circleci/postgres:9.4

      working_directory: ~/repo


      steps:
        - checkout

        - run:
            name: install dependencies
            command: |
              python3 -m venv venv
              . venv/bin/activate
              pip install -r requirements.txt

        - run:
            name: run views
            command: |
              . venv/bin/activate
              python3 views.py
            background: true


        - run:
            name: run tests
            command: |
              . venv/bin/activate
              python3 -m unittest test_app.py
  #
  #
  #
  #       - store_artifacts:
  #           path: test-reports
  #           destination: test-reports




workflows:
  version: 2
  pr_check_workflow:
    jobs:
      - pr_check
  #
  build_deploy_workflow:
    jobs:
      - build:
          filters:
            branches:
              only: master
